#version 330 core

in vec3 objectColor;
in vec2 TexCoord;
in vec3 Normal;
in vec3 fragPos;

out vec4 color; 
out vec3 normal;

//uniform vec3 objectColor;
uniform vec3 lightColor;
uniform vec3 lightPos;

void main()
{	
	//diffuse
	vec3 norm = normalize(normal);
	vec3 lightDirection = normalize(lightPos - fragPos);
	float diff = max(dot(norm, lightDirection), 0.0);
	vec3 diffuse = diff * lightColor;

	//ambient color
	vec3 lightColor = vec3 (0.50f, 0.50f, 0.50f);
    float ambientStrength = 1.0f;
	vec3 MaterialAmbientColor = vec3(0.3f, 0.3f, 0.3f);
    vec3 ambient = ambientStrength * lightColor; // * MaterialAmbientColor;

	//resulting colors
    vec3 result = (ambient + diffuse) * objectColor;
    color= vec4(result, 1.0f); //(objectColor * lightColor, 1.0f);
	normal = Normal;
}